########################################
# Aliases
[alias]

unedit       = checkout --
unstage      = reset HEAD --
uncommit     = reset --soft HEAD~1
recommit     = commit -c ORIG_HEAD

####################
# (git status)
s            = status
p            = status --porcelain

####################
# (git branch)
b            = branch

####################
# (git add)
a            = add
au           = add -u
ap           = add -p

####################
# (git commit)
c            = commit
cm           = commit -m
ca           = "!git commit --amend && echo && git status"
can          = commit --amend --no-edit
amend        = commit --amend -C HEAD --no-verify
 # ^ ALTERNATIVE: 
 # " !  git add -u
 #   && git commit --amend --no-edit
 #   && echo
 #   && git status"

####################
# (git push)
p            = push

####################
# (git pull)
l            = pull

####################
# (git merge)
m            = merge --no-ff
ma           = merge --abort

####################
# (git checkout)
co           = checkout
cb           = checkout -b
com          = checkout master

####################
# (git diff)
difference   = diff
d            = diff
dm           = diff master
df           = diff --name-only
dmf          = diff master --name-only
dc           = "!git --no-pager diff --cached"

####################
# (git rebase)
r            = rebase
rc           = rebase --continue
ra           = rebase --abort
rpm          = rebase -p master

####################
# (git submodule)
sm           = submodule
sma          = submodule add
smu          = submodule update --remote --merge
# smr        = git rm the_submodule && rm -rf .git/modules/the_submodule

####################
# (miscellaneous)

ch           = rev-parse --verify HEAD

dif          = diff --unified=1 --color-words --no-index

rmrm         = !git ls-files --deleted -z | xargs -0 git rm

track        = checkout --track

remove       = !sh -c 'git ls-files -d | xargs git rm'

g            = log --graph --oneline --decorate

lsd          = log --graph --decorate --pretty=oneline --abbrev-commit --all

lp           = log --format='%ad %x09 %h %x09 %s' --date=relative

history      = log --pretty=format:"%h%x09%ad%x09%an%x09%s" --date=relative

up           = !sh -c 'git remote add origin $1 && git fetch origin && git branch --set-upstream master origin/master' -

####################
# (Upstream-stuff)

lru          = pull --rebase upstream master
             # ^ for updating a fork

upstream-add = remote add upstrem
             # ^ e.g. 
             # git remote add upstream git@github.com:VinylRecords/Vinyl.git

backup       = !sh -c 'git checkout -b backup/$(git rev-parse --abbrev-ref HEAD) && git checkout - && git branch'

########################################
# Settings

[user]
name = Spiros Boosalis
email = SamBoosalis@gmail.com

# [remote "origin"]
# url = ssh://git@...

[color]
ui = true

#[credential]
#helper = osxkeychain

########################################
# Core Settings
[core]

filemode          = false

autocrlf          = false
  #
  # `autocrlf = input` means:
  # convert CRLF to LF on commit i.e. "input"
  # (don't convert LF to CRLF on checkout)
  #

# editor          = emacsclient
  #
  # $GIT_EDITOR -> core.editor -> $VISUAL -> $EDITOR

pager             = less
  # a blank `pager` means: no pager

whitespace        = trailing-space

# commit.template =

########################################
# SubCommands

[push]
default       = current

[diff]
tool          = vimdiff

[merge]
tool          = emerge
conflictstyle = diff3

[mergetool]
prompt        = false

###[mergetool "emerge"]
###path = 

########################################
# Miscellaneous

########################################
# (NOTES)
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# e.g.
#     path = /Applications/Emacs.app/Contents/MacOS/Emacs
# 
# 
########################################