






















#complete -W "help edit build switch generations remove-generations expire-generations packages news" home-manager













as <https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html> says, reasons for completion include:

* to save them from typing text when it can be auto-completed
* to help them know what are the available continuations to their commands
* to prevent errors and improve their experience by hiding or showing options based on what they have already typed



















GTAGS

Added to the above, to be able to use ctags as backend, you need to copy the default gtags.conf into ~/.globalrc:

cp gtags.conf ~/.globalrc

This can confuse new gtags users since GNU Global claims that it supports ctags but without the config file, it does nothing.
And also in addition, add below to your shell init.

setenv GTAGSCONF ~/.globalrc
setenv GTAGSLABEL ctags






















PROBLEM 1:

    (process:17674): Gtk-WARNING **: 00:37:38.583: Locale not supported by C library.
    	Using the fallback 'C' locale.
    
    (-emacs-wrapped:17674): Gtk-WARNING **: 00:37:38.605: Theme parsing error: gtk-keys.css:108:18: The 'gtk-key-bindings' property has been renamed to '-gtk-key-bindings'
    
    (-emacs-wrapped:17674): Gtk-WARNING **: 00:37:38.605: Theme parsing error: gtk-keys.css:112:18: The 'gtk-key-bindings' property has been renamed to '-gtk-key-bindings'
    
    (-emacs-wrapped:17674): Gtk-WARNING **: 00:37:38.605: Theme parsing error: gtk-keys.css:116:18: The 'gtk-key-bindings' property has been renamed to '-gtk-key-bindings'
    
    (-emacs-wrapped:17674): Gtk-WARNING **: 00:37:38.605: Theme parsing error: gtk-keys.css:120:18: The 'gtk-key-bindings' property has been renamed to '-gtk-key-bindings'
    
    (-emacs-wrapped:17674): Gtk-CRITICAL **: 00:37:39.733: gtk_distribute_natural_allocation: assertion 'extra_space >= 0' failed
    

PROBLEM 2:

    perl: warning: Setting locale failed.
    perl: warning: Please check that your locale settings:
    	LANGUAGE = "en_US",
    	LC_ALL = (unset),
    	LC_CTYPE = "en_US.UTF-8",
    	LANG = "en_US.UTF-8"
        are supported and installed on your system.
    perl: warning: Falling back to the standard locale ("C").


WORKAROUND:

nix-env -iA nixpkgs.glibcLocales

Then add the following to the end of your .bashrc:

export LOCALE_ARCHIVE="$(readlink ~/.nix-profile/lib/locale)/locale-archive"

Then restart your shell, and reinstall the package if needed. Not sure how to do the latter correctly - I went for the nuclear option by removing the store paths and running a repair, but that might have undesirable consequences. Perhaps @edolstra can clarify on the correct way to do this?

I don't know whether this workaround affects non-Nix stuff - as far as I can tell, $LOCALE_ARCHIVE is a Nix thing.

<https://github.com/NixOS/nixpkgs/issues/8398>













Locking a channel or property is as simple as creating a configuration file and setting either (and only either) the “locked” or “unlocked” attribute on <channel> or <property> elements that should be restricted. This configuration file should be placed in a system location that is read by the daemon (see “File locations” above).

Both the “locked” and “unlocked” attributes take a semicolon-separated list of system user and group names. User names should be entered as-is, and group names should be entered with an “@” symbol prepended to the group name.

The “locked” attribute specifies users and groups who may not modify the property. The “unlocked” attribute specifies users and groups who may modify the property, with other users locked out. Only one of the two attributes may be specified for a particular channel or property. If both are present, the “unlocked” attribute is used, and the “locked” attribute is ignored.

Note that <channel> locking locks all properties under that channel, but <property> locking locks only the property with the “locked” or “unlocked” attribute; none of the sub-properties are locked unless they also contain a “locked” or “unlocked” attribute.


git clone https://github.com/Fuco1/Elsa.git somewhere to your computer.
Add (depends-on "elsa") to Cask file of your project
Run cask link elsa <path-to-elsa-repo>
cask exec elsa <file-to-analyse> to analyse the file. Currently only one file at a time can be analysed.





Xfce does not have a shortcut to kill a window, for example when a program freezes.

With xorg-xkill, use xkill to interactively kill a window. For the currently active window, use xdotool:

$ xdotool getwindowfocus windowkill





~/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml. Most of the settings will be set to "empty" if they haven't been changed, otherwise they'll be set to the value. For example, the DPI is set with <property name="DPI" type="int" value="96"/> under Xft, while the font is set to a string with <property name="FontName" type="string" value="Noto Sans 11"/> under Gtk






2014-03-20: Go into Settings->Emerald Theme Manager, select the theme you're using and edit it.  You can make the title bar bigger, if you need, and adjust the size of the buttons on it.  I haven't played around with it, so I don't know if the changes take effect right away, or if you have to log out and back in to have everything change, but you should be able to see the difference inside Emerald before you exit.


also there exist some unit-doubled GTK2-themes that will give you fake-hidpi for GTK2...

https://forum.xfce.org/viewtopic.php?id=7734


Also just to show a fake HIDPI example, you can see thunar (doubled GTK2 fake HiDPI theme) and Pluma(GTK3). gtk2 font dpi size is 192px and the icon sizes are doubled eg:

xfconf-query -c xsettings -p /Gtk/IconSizes -s "gtk-menu=32,32:gtk-small-toolbar=48,48:gtk-large-toolbar=48,48:gtk-dnd=96,96:gtk-button=48,48:gtk-dialog=96,96:gtk-panel=48,48:panel-applications-menu=48,48:panel-tasklist-menu=64,64:panel-menu=48,48:panel-directory-menu=48,48:panel-launcher-menu=48,48:panel-window-menu=48,48:panel-menu-bar=48,48:ev-icon-size-annot-window=32,32:webkit-media-button-size=48,48"











R
emove the `"XkbOptions"` line from `xorg.conf`; add this to Xfce's autostart:

    /usr/bin/setxkbmap -option "ctrl:nocaps" 


which turns the Caps Lock key into an additional Ctrl key.




    (define-key key-translation-map (kbd "ESC") (kbd "C-g"))



