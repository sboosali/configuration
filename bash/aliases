### -*- mode: conf-unix; -*-

##################################################

alias c="cat"

#------------------------------------------------#

##################################################

alias l="ls -la"

#------------------------------------------------#

alias la="ls -a"
alias ll="ls -l"

##################################################

alias f=find

#------------------------------------------------#

##################################################

#------------------------------------------------#

##################################################

# alias clean-haskell="remove \"$1\".{dyn_hi,dyn_o,hi,o}"
# alias clean-emacs='remove "${1:?}".~ .\#"${1:?}"'

alias ft=find-temporaries
alias rt=rm-temporaries

##################################################

alias nm=home-manager

# ^ {nm} abbreviates "{n}ix home-{m}anager"

#------------------------------------------------#

SBOO_HOME_DOT_NIX="$HOME/configuration/home-manager/nix/home.nix"

alias nm="home-manager -f ${SBOO_HOME_DOT_NIX}"
alias nmb="home-manager -f ${SBOO_HOME_DOT_NIX} build"
alias nmw="time home-manager -f ${SBOO_HOME_DOT_NIX} switch"

# alias nmb='NIX_PATH=nixpkgs=/home/sboo/.nix-defexpr/channels/nixpkgs home-manager -f "$HOME/configuration/home-manager/nix/home.nix" build'
# alias nmw='NIX_PATH=nixpkgs=/home/sboo/.nix-defexpr/channels/nixpkgs home-manager -f "$HOME/configuration/home-manager/nix/home.nix" switch'

# alias nmb='NIX_PATH=nixpkgs=/home/sboo/nixpkgs home-manager -f "$HOME/configuration/home-manager/nix/home.nix" build'
# alias nmw='NIX_PATH=nixpkgs=/home/sboo/nixpkgs home-manager -f "$HOME/configuration/home-manager/nix/home.nix" switch'

# alias nmb='home-manager -f "$HOME/configuration/home-manager/nix/home.nix" build'
# alias nmw='home-manager -f "$HOME/configuration/home-manager/nix/home.nix" switch'

#alias nmb="home-manager build"
#alias nmw="home-manager switch"

#------------------------------------------------#

alias nmg="home-manager generations"
alias nmp="home-manager packages"

#alias nh_="home-manager _"

#------------------------------------------------#

alias help-home-manager="home-manager --help"

##################################################

#alias nix-env-unqualified="nix-env" #TODO does the timing of the scoping work? NO 
#alias nix-env-qualified-default='nix-env -f "<nixpkgs>"'
#alias nix-env-qualified-file='nix-env -f "~/nixpkgs"'
#alias nix-env="nix-env -f $HOME/nixpkgs"

#------------------------------------------------#

alias ne=nix-env
alias nea='nix-env -A'
alias ni="nix-env -i"
alias nu="nix-env --uninstall"
alias nix-install="nix-env -i"
alias nix-uninstall="nix-env --uninstall"
# alias nua="nix-env -u '*'"

alias nix-build="nix-build --show-trace"
alias nb="nix-build"
alias nbe="nix-build ~/.nixpkgs/environment.nix" #TODO home.nix

#------------------------------------------------#

alias nix-shell="nix-shell --show-trace"
alias nl="nix-shell"
alias nlp="nix-shell --pure"
alias nlr="nix-shell --run"
alias nlrp="nix-shell --pure --run"
alias nlx="nix-shell --run return"
alias nlxp="nix-shell --pure --run exit"
alias nlhba="nix-shell --run 'cabal new-build all'"

#------------------------------------------------#

alias nix-eval="nix-instantiate --eval"
alias nx="nix-instantiate --eval"
alias nxv="nix-instantiate --eval"
alias nxp="nix-instantiate --parse"
alias nxe="nix-instantiate --eval"
alias nxs="nix-instantiate --eval --strict" 
alias nxx="nix-instantiate --expr" # nxx 'import ./"$1" {}'
# alias nx1="nix-instantiate --eval" # eval unary with defaults
# alias nx2="nix-instantiate --eval" # eval binary with defaults
#alias nx1="nix-instantiate --eval" # eval unary with defaults

#------------------------------------------------#

alias ns="nix-store"
alias nsr='nix-store --query --references'

alias ncu='nix-channel --update && nix-env --upgrade'
# alias ncux="nix-channel --update nixpkgs"

alias npg="nix-prefetch-git --quiet"
alias npu="nix-prefetch-url"

#alias n="nix-"
#alias n="nix-"

#------------------------------------------------#

alias nix-make-shell='cabal2nix *.cabal --sha256=0 --shell > shell.nix'
alias nix-make-default='cabal2nix *.cabal > default.nix'
alias nr=sboo-nix-repl

# alias hn="stack setup" # "n"ew
# alias hb="stack build"

##################################################

alias m="make"             # "m"ake

#------------------------------------------------#

alias ma="make all"        # "a"ll
alias mb="make build"      # "b"uild
alias ml="make shell"      # shel"l"
alias mf="make configure"  # con"f"igure
alias mc="make check"      # type-"c"heck
alias mr="make repl"       # "r"epl
alias mp="make compile"    # com"p"ile
alias mi="make install"    # "i"nstall
alias mx="make execute"    # "e"xecute
alias mq="make clean"      # "q"lean / "quit"(?) lol
alias mw="make watch"      # "w"atch
alias mt="make test"       # "t"est
alias mz="make clean"       # "z"(?)

##################################################

#------------------------------------------------#

alias hsi="stack install"       # 
alias hsc="stack configure"     # 
alias hsb="stack build"         # 
alias hst="stack test"          # 
alias hsn="stack bench"         # be{n}ch
alias hsr="stack repl"          # 
alias hsx="stack run --"        # "run" is like e{x}ecute
# alias hsx="stack exec --"

#------------------------------------------------#

# alias h=haskell-build
# alias hn=haskell-nix-build
# alias hcc="cabal configure"
# alias hcb="cabal build"
# alias hnew=new-haskell-project

##################################################
#alias pi="ipython"
alias p3="python3"
alias p2="python2.7"

##################################################


##################################################

alias sshl='ssh-add -l'
# alias ssh='ssh-ident' # TODO
# alias gcs="clone sboosali"

##################################################

alias emacs-nix='./result/bin/emacs -q --load "./init.el"' # relative filepaths

##################################################

alias v=direnv           # diren[v]
alias va="direnv allow"  # [a]llow

##################################################

alias sboo-emacs="~/.emacs.d/result/bin/emacs &disown"

##alias sboo-emacs="(cd ~/.emacs.d/ && make build && )"

alias sboo-ssh-add="ssh-add ~/.ssh/$(hostname)_git@github.com_id_rsa"
alias sboo-restart-gnome="gnome-shell --replace &disown"
alias sboo-restart-xbindkeys="killall xbindkeys || true ; xbindkeys -fg ~/.xbindkeysrc.scm &disown "
alias sboo-restart-kde="kquitapp5 plasmashell && kstart plasmashell"

##################################################

alias dpkg-uninstall="sudo dpkg --force-remove-reinstreq --purge"

alias git-status-subdirs="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '(echo {} && cd {} && git status -s && echo)' \;"

# alias unzip="7z x" # needs 7z

##################################################